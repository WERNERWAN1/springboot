package com.werner.aop;import com.werner.common.util.ResponseData;import lombok.extern.slf4j.Slf4j;import org.aspectj.lang.ProceedingJoinPoint;import org.aspectj.lang.annotation.*;import org.springframework.stereotype.Component;@Aspect@Component@Slf4jpublic class AopLogs {    @Pointcut("execution(public * com.werner.controller..*.*(..)) ")    public void poincut() {        log.info(">>>>>>>>>>到了切点<<<<<<<<<");    }    /**     * 也可以将切点中的执行包写到@Around中     * @param joinPoint     * @throws Throwable     */    @Around("poincut()")    protected void insertMethod(ProceedingJoinPoint joinPoint) throws Throwable {        try {            joinPoint.proceed();        } catch (Exception e) {            log.error("类名：" + joinPoint.getClass().getName() +                    "方法名：" + joinPoint.getSignature().getName()+                    "异常："+e.toString()            );        }    }}